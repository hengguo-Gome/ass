<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gome.ass.dao.users.ShUserDao" >
  <resultMap id="BaseResultMap" type="com.gome.ass.entity.ShUser" >
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
    <result column="WEBCODE" property="webcode" jdbcType="VARCHAR"/>
    <result column="FROM_TYPE" property="fromType" jdbcType="VARCHAR" />
  </resultMap>
 <sql id="Base_Column_List" >
    NAME, ACCOUNT, PASSWORD, COMPANY_CODE, FROM_TYPE
  </sql>
  <select id="getUserPageList" parameterType="com.gome.common.page.Page" resultType="hashmap">
    SELECT 
        <include refid="Base_Column_List"/>
    FROM
        v_user
    <where>
      <if test="param.name != null and param.name != '' ">
          and v_user.name LIKE CONCAT('%', #{param.name}, '%')
      </if>
      <if test="param.account != null and param.account != '' ">
          and v_user.account = #{param.account}
      </if>
      <if test="param.pasword != null and param.password != '' ">
          and v_user.password = #{param.password}
      </if>
      <if test="param.fromType != null and param.fromType != ''">
          and v_user.from_type = #{param.fromType}
      </if>
    </where>
  </select>
  <select id="getUserSelective" parameterType="com.gome.common.page.Page" resultType="com.gome.ass.entity.ShUser">
    SELECT
		v_user.`NAME`,
		v_user.ACCOUNT,
		v_user.`PASSWORD`,
		v_user.COMPANY_CODE,
		v_user.WEBCODE,
		sh_code_setting.code_value AS FROM_TYPE
	FROM
		sh_code_setting
	INNER JOIN sh_code ON sh_code.code_id = sh_code_setting.code_id,
	 v_user
	WHERE
		sh_code.code_id = 'user_type'
      <if test="param.account != null and param.account != '' ">
          and v_user.account = #{param.account}
      </if>
      <if test="param.pasword != null and param.password != '' ">
          and v_user.password = #{param.password}
      </if>
      <if test="param.fromType != null and param.fromType != ''">
          and v_user.from_type = #{param.fromType}
      </if>
  </select>
  <!-- 
  <insert id="insert" parameterType="com.gome.ass.entity.ShUser" >
    insert into v_user (NAME, ACCOUNT, PASSWORD, 
      COMPANY_CODE, FROM_TYPE)
    values (#{name,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{companyCode,jdbcType=VARCHAR}, #{fromType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gome.ass.entity.ShUser" >
    insert into v_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        NAME,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="companyCode != null" >
        COMPANY_CODE,
      </if>
      <if test="fromType != null" >
        FROM_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null" >
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="fromType != null" >
        #{fromType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
   -->
</mapper>