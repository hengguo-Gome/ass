<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gome.ass.dao.users.CrmWorkerDao">
	<resultMap id="BaseResultMap" type="com.gome.ass.entity.CrmWorker">
		<id column="worker_id" property="workerId" jdbcType="CHAR" />
		<result column="website_code" property="websiteCode" jdbcType="CHAR" />
		<result column="worker_code" property="workerCode" jdbcType="CHAR" />
		<result column="worker_name" property="workerName" jdbcType="CHAR" />
		<result column="phone" property="phone" jdbcType="CHAR" />
		<result column="worker_type" property="workerType" jdbcType="CHAR" />
		<result column="logout_flag" property="logoutFlag" jdbcType="CHAR" />
		<result column="update_flag" property="updateFlag" jdbcType="CHAR" />
		<result column="password" property="password" jdbcType="CHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		worker_id, website_code, worker_code, worker_name, phone, worker_type,
		logout_flag, update_flag
	</sql>

	<delete id="deleteBatch" parameterType="java.util.List">
		delete from crm_worker
		where worker_code in
		<foreach item="item" collection="list" open="(" separator=","
			close=")">
			#{item}
		</foreach>
	</delete>

	<insert id="insertBatch" parameterType="java.util.List">
		INSERT INTO crm_worker (
		<include refid="Base_Column_List" />
		)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.workerId},#{item.websiteCode},#{item.workerCode},#{item.workerName},#{item.phone},#{item.workerType},#{item.logoutFlag},#{item.updateFlag})
		</foreach>
	</insert>

	<select id="findWorkerByPhone" parameterType="map" resultMap="BaseResultMap">
		SELECT
		w.worker_id,w.website_code,w.worker_code,w.worker_name,w.phone,w.worker_type,w.logout_flag,w.update_flag,u.password
		FROM
		crm_worker w
		left join sh_user_pwd_info u
		on w.worker_code = u.user_id
		<where>
			<if test="phone != null">w.phone =#{phone}</if>
			<if test="userId != null"> and w.worker_code = #{userId}</if>
		</where>
	</select>
	<select id="getWorkerPageList" parameterType="com.gome.common.page.Page"
		resultType="hashmap">
		SELECT
    		crm_worker.worker_id,
    		crm_worker.website_code,
    		crm_worker.worker_code,
    		crm_worker.worker_name,
    		crm_worker.phone,
    		sh_code_setting.code_value AS logout_flag,
    		crm_worker.worker_type
		FROM
    		crm_worker
    		INNER JOIN sh_code_setting ON sh_code_setting.code_key =
    		crm_worker.logout_flag
  		WHERE
            sh_code_setting.code_id='worker_logout'
	  
       <if test="param.websiteCode != null and param.websiteCode != '' ">
        and crm_worker.website_code = #{param.websiteCode}</if>
       <if test="param.workerCode != null and param.workerCode != '' ">
        and crm_worker.worker_code = #{param.workerCode}</if>
       <if test="param.workerName!= null and param.workerName != '' ">
        and crm_worker.worker_name like CONCAT('%', #{param.workerName}, '%')</if>
       <if test="param.phone != null and param.phone!= '' ">
        and crm_worker.phone like CONCAT('%', #{param.phone}, '%')</if>
       <if test="param.logoutFlag != null and param.logoutFlag != '' ">
        and crm_worker.logout_flag = #{param.logoutFlag}</if>
       <if test="param.workerType != null and param.workerType != '' ">
        and crm_worker.worker_type = #{param.workerType}</if>
       <if test="param.webCode != null and param.webCode != ''">
       	and crm_worker.website_code = #{param.webCode}
       </if>

	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from crm_worker
		where worker_id = #{workerId,jdbcType=CHAR}
	</select>
	<select id="findWebCodeList" parameterType="java.lang.String" resultType="map">
		SELECT DISTINCT
			crm_web_basicdata. CODE AS webcode,
			crm_web_basicdata.web_name AS webname
		FROM
			crm_worker
		INNER JOIN crm_web_basicdata ON crm_worker.website_code = crm_web_basicdata. CODE
		<where>
			<if test="_parameter != null and _parameter != '' ">
				crm_web_basicdata.code = #{_parameter,jdbcType=VARCHAR};
			</if>
		</where>
	</select>
	<select id="findWorkerCodeByWebcode" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			worker_code
		FROM
			crm_worker
		WHERE
			website_code = #{_parameter,jdbcType=VARCHAR};
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from crm_worker
		where worker_id = #{workerId,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.gome.ass.entity.CrmWorker">
		insert into crm_worker (worker_id, website_code, worker_code,
		worker_name, phone, street,
		worker_type, logout_flag,
		update_flag
		)
		values (#{workerId,jdbcType=CHAR}, #{websiteCode,jdbcType=CHAR},
		#{workerCode,jdbcType=CHAR},
		#{workerName,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{street,jdbcType=CHAR},
		#{workerType,jdbcType=CHAR},
		#{logoutFlag,jdbcType=CHAR}, #{updateFlag,jdbcType=CHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.gome.ass.entity.CrmWorker">
		insert into crm_worker
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="workerId != null">
				worker_id,
			</if>
			<if test="websiteCode != null">
				website_code,
			</if>
			<if test="workerCode != null">
				worker_code,
			</if>
			<if test="workerName != null">
				worker_name,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="street != null">
				street,
			</if>
			<if test="workerType != null">
				worker_type,
			</if>
			<if test="logoutFlag != null">
				logout_flag,
			</if>
			<if test="updateFlag != null">
				update_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="workerId != null">
				#{workerId,jdbcType=CHAR},
			</if>
			<if test="websiteCode != null">
				#{websiteCode,jdbcType=CHAR},
			</if>
			<if test="workerCode != null">
				#{workerCode,jdbcType=CHAR},
			</if>
			<if test="workerName != null">
				#{workerName,jdbcType=CHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=CHAR},
			</if>
			<if test="street != null">
				#{street,jdbcType=CHAR},
			</if>
			<if test="workerType != null">
				#{workerType,jdbcType=CHAR},
			</if>
			<if test="logoutFlag != null">
				#{logoutFlag,jdbcType=CHAR},
			</if>
			<if test="updateFlag != null">
				#{upateFlag,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gome.ass.entity.CrmWorker">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 04 
			10:33:24 CST 2014. -->
		update crm_worker
		<set>
			<if test="websiteCode != null">
				website_code = #{websiteCode,jdbcType=CHAR},
			</if>
			<if test="workerCode != null">
				worker_code = #{workerCode,jdbcType=CHAR},
			</if>
			<if test="workerName != null">
				worker_name = #{workerName,jdbcType=CHAR},
			</if>
			<if test="phone != null">
				phone = #{telNumber,jdbcType=CHAR},
			</if>
			<if test="street != null">
				street = #{street,jdbcType=CHAR},
			</if>
			<if test="workerType != null">
				worker_type = #{workerType,jdbcType=CHAR},
			</if>
			<if test="logoutFlag != null">
				logout_flag = #{logoutFlag,jdbcType=CHAR},
			</if>
			<if test="updateFlag != null">
				update_flag = #{udateFlag,jdbcType=CHAR},
			</if>
		</set>
		where worker_id = #{workerId,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gome.ass.entity.CrmWorker">
		update crm_worker
		set website_code = #{websiteCode,jdbcType=CHAR},
		worker_code = #{workerCode,jdbcType=CHAR},
		worker_name = #{workerName,jdbcType=CHAR},
		phone = #{phone,jdbcType=CHAR},
		street = #{street,jdbcType=CHAR},
		worker_type = #{workerType,jdbcType=CHAR},
		logout_flag = #{logoutFlag,jdbcType=CHAR},
		update_flag =
		#{updateFlag,jdbcType=CHAR}
		where worker_id = #{workerId,jdbcType=CHAR}
	</update>
</mapper>